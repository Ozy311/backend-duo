# Flask App Configuration
FLASK_SECRET_KEY='replace_with_a_strong_random_secret_key'
# Default session length
FLASK_SESSION_DURATION_HOURS=21
# Enable extra debug logging in the application code (true/false)
FLASK_APP_DEBUG='false'

# Active Directory Configuration
# Comma-separated list for HA - Use HOSTNAMES, not IPs
# AD_SERVER_URIS='ldaps://your-ad-server1.example.com:636,ldaps://your-ad-server2.example.com:636'
# Example using hostnames
AD_SERVER_URIS='ldaps://dc1.example.com:636,ldaps://dc2.example.com:636'
# Distinguished Name for the bind user
AD_BIND_DN='cn=YourBindUser,ou=Users,dc=example,dc=com'
AD_BIND_PASSWORD='replace_with_bind_user_password'
# Base DN to search for users
AD_SEARCH_BASE='ou=Users,dc=example,dc=com'
# Filter to find user by username
AD_USER_FILTER='(sAMAccountName={username})'
# Use LDAPS (true) or LDAP (false)?
AD_USE_SSL='true'
# Optional: Path to CA cert file for LDAPS validation (leave empty or remove line to disable)
AD_CA_CERT_FILE='/path/to/your/ca_certificate.crt'

# Duo Security Configuration (Web SDK Application)
DUO_CLIENT_ID='replace_with_duo_client_id'
DUO_CLIENT_SECRET='replace_with_duo_client_secret'
# e.g., api-xxxxxxxx.duosecurity.com
DUO_API_HOST='replace_with_duo_api_hostname'
# PRODUCTION Example: Must match Duo admin panel config
# DUO_REDIRECT_URI='https://your-production-server.example.com/duo_callback'
# TEST Example: Replace with your actual test callback URL and ensure it's added in Duo Admin Panel
DUO_REDIRECT_URI='http://your-test-server.example.com/duo_callback'

# Proxy Configuration (Needed if Flask app server cannot reach Duo API host directly)
# Standard environment variables used by requests/duo_universal library:
# Replace with your actual HTTPS proxy URL
HTTPS_PROXY='http://proxy.example.com:3128'
# Replace with your actual HTTP proxy URL
HTTP_PROXY='http://proxy.example.com:3128'
# Custom variables below are NOT directly used by the duo_universal library
# Keep for reference or other scripts if needed
# DUO_PROXY_HOST='proxy'
# DUO_PROXY_PORT=3128

# Backend Application Configuration (Optional, if needed by Flask)
# BACKEND_TOMCAT_URL='http://localhost:8080'